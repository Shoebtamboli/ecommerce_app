<!-- app/views/admin/products/_form.html.erb -->
<%= form_with(model: [:admin, product], local: true, class: "max-w-lg") do |form| %>
  <% if product.errors.any? %>
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
      <h2><%= pluralize(product.errors.count, "error") %> prohibited this product from being saved:</h2>
      <ul>
        <% product.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <div class="mb-4">
    <%= form.label :name, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.text_field :name, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
  </div>
  <div class="mb-4">
    <%= form.label :description, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.text_area :description, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
  </div>
  <div class="mb-4">
    <%= form.label :price, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.number_field :price, step: 0.01, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
  </div>
  <div class="mb-4">
    <%= form.label :stock, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.number_field :stock, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
  </div>
  <div class="mb-4">
    <%= form.label :thumbnail, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.file_field :thumbnail, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline", accept: 'image/*', data: { action: "change->product#previewThumbnail" } %>
    <div id="thumbnail-preview" class="mt-2">
      <% if product.thumbnail.attached? %>
        <%= image_tag product.thumbnail, class: "w-32 h-32 object-cover" %>
      <% end %>
    </div>
  </div>
  <div class="mb-4">
    <%= form.label :images, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.file_field :images, multiple: true, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline", accept: 'image/*', data: { action: "change->product#previewImages" } %>
    <div id="images-preview" class="mt-2 grid grid-cols-3 gap-2">
      <% product.images.each do |image| %>
        <div class="relative">
          <%= image_tag image, class: "w-32 h-32 object-cover" %>
          <%= button_to 'Remove', remove_image_admin_product_path(product, image_id: image.id), method: :delete, class: "absolute top-0 right-0 bg-red-500 text-white rounded-full p-1 text-xs", form: { data: { turbo_confirm: "Are you sure you want to remove this image?" } } %>
        </div>
      <% end %>
    </div>
  </div>
  <div class="flex items-center justify-between">
    <%= form.submit class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" %>
    <%= link_to "Back", admin_products_path, class: "inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800" %>
  </div>
<% end %>
<script>
  class ProductController {
    static previewThumbnail(event) {
      const input = event.target;
      const preview = document.getElementById('thumbnail-preview');
      preview.innerHTML = '';
      if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function(e) {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.className = 'w-32 h-32 object-cover';
          preview.appendChild(img);
        }
        reader.readAsDataURL(input.files[0]);
      }
    }

    static previewImages(event) {
      const input = event.target;
      const preview = document.getElementById('images-preview');
      preview.innerHTML = '';
      if (input.files) {
        Array.from(input.files).forEach(file => {
          const reader = new FileReader();
          reader.onload = function(e) {
            const div = document.createElement('div');
            div.className = 'relative';
            const img = document.createElement('img');
            img.src = e.target.result;
            img.className = 'w-32 h-32 object-cover';
            div.appendChild(img);
            preview.appendChild(div);
          }
          reader.readAsDataURL(file);
        });
      }
    }
  }

  document.addEventListener('DOMContentLoaded', (event) => {
    document.querySelector('input[type="file"][data-action="change->product#previewThumbnail"]').addEventListener('change', ProductController.previewThumbnail);
    document.querySelector('input[type="file"][data-action="change->product#previewImages"]').addEventListener('change', ProductController.previewImages);
  });
</script>