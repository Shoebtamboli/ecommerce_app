<%= form_with(model: [:admin, product], local: true, class: "max-w-lg") do |form| %>
  <% if product.errors.any? %>
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
      <h2><%= pluralize(product.errors.count, "error") %> prohibited this product from being saved:</h2>
      <ul>
        <% product.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <div class="mb-4">
    <%= form.label :name, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.text_field :name, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
  </div>
  <div class="mb-4">
    <%= form.label :description, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.text_area :description, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
  </div>
  <div class="mb-4">
    <%= form.label :price, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.number_field :price, step: 0.01, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
  </div>
  <div class="mb-4">
    <%= form.label :stock, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.number_field :stock, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" %>
  </div>
  <div class="mb-4">
    <%= form.label :thumbnail, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.file_field :thumbnail, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline", accept: 'image/*', id: "thumbnail-upload" %>
    <div id="thumbnail-preview" class="mt-2">
      <% if product.thumbnail.attached? %>
        <%= image_tag product.thumbnail, class: "w-32 h-32 object-cover" %>
      <% end %>
    </div>
  </div>
  <div class="mb-4">
    <%= form.label :images, class: "block text-gray-700 text-sm font-bold mb-2" %>
    <%= form.file_field :images, multiple: true, class: "shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline", accept: 'image/*', id: "images-upload" %>
    <div id="images-preview" class="mt-2 grid grid-cols-3 gap-2">
      <% product.images.each do |image| %>
        <div class="relative" id="image-<%= image.id %>">
          <%= image_tag image, class: "w-32 h-32 object-cover" %>
          <button type="button" class="absolute top-0 right-0 bg-red-500 text-white rounded-full p-1 text-xs" onclick="markImageForRemoval(<%= image.id %>)">
            Remove
          </button>
          <%= form.check_box :images_to_remove, { multiple: true, class: 'hidden', id: "remove-image-#{image.id}" }, image.id, false %>
        </div>
      <% end %>
    </div>
  </div>
  <div class="flex items-center justify-between">
    <%= form.submit class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" %>
    <%= link_to "Back", admin_products_path, class: "inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800" %>
  </div>
<% end %>
<script>
  function markImageForRemoval(imageId) {
    const checkbox = document.getElementById(`remove-image-${imageId}`);
    checkbox.checked = !checkbox.checked;
    const imageDiv = document.getElementById(`image-${imageId}`);
    imageDiv.style.opacity = checkbox.checked ? '0.5' : '1';
  }

  document.addEventListener('DOMContentLoaded', (event) => {
    const thumbnailInput = document.getElementById('thumbnail-upload');
    const thumbnailPreview = document.getElementById('thumbnail-preview');
    const imagesInput = document.getElementById('images-upload');
    const imagesPreview = document.getElementById('images-preview');

    thumbnailInput.addEventListener('change', (e) => {
      thumbnailPreview.innerHTML = '';
      const file = e.target.files[0];
      if (file && file.type.startsWith('image/')) {
        const reader = new FileReader();
        reader.onload = function(e) {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.className = 'w-32 h-32 object-cover';
          thumbnailPreview.appendChild(img);
        }
        reader.readAsDataURL(file);
      }
    });

    imagesInput.addEventListener('change', (e) => {
      Array.from(e.target.files).forEach(file => {
        if (file.type.startsWith('image/')) {
          const reader = new FileReader();
          reader.onload = function(e) {
            const div = document.createElement('div');
            div.className = 'relative';
            const img = document.createElement('img');
            img.src = e.target.result;
            img.className = 'w-32 h-32 object-cover';
            div.appendChild(img);
            imagesPreview.appendChild(div);
          }
          reader.readAsDataURL(file);
        }
      });
    });
  });
</script>